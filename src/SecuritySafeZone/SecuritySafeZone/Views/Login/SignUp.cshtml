@model SecuritySafeZone.Models.User

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>SignUp</title>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/bootstrap.bundle.js"></script>

    <style>


        body {
            font-family: Arial;
        }

        .card-header {
            background: teal;
            color: white;
            position: relative;
        }

        .panel-title {
            color: teal;
        }

        .container input {
            display: inline-block;
        }

        input[type=text], input[type=password], input[type=email] {
            width: 100%;
        }
        /* Header/Logo Title */

        form {
        }

        .buttons .button1 {
            background: teal; /* Green */

            color: white;
            height: 50px;
            text-decoration: none;
            font-size: 20px;
            cursor: pointer;
            width: 230px;
            display: block;
        }

            .buttons.button1:not(:last-child) {
                border-bottom: none; /* Prevent double borders */
            }

            .buttons .button1:hover {
                background-color: teal;
            }
    </style>
</head>
<body>

    <div class="card-header text-center">
        <h1>SafeZone</h1>
    </div>
    <br>
    @using (Html.BeginForm())
    {

        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="panel-title text-center">

                <h2>
                    SignUp
                </h2>

            </div>
            <center>
                @Html.Raw(ViewBag.InsertMessage)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="container">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Username" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="container">
                    @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter CNIC" } })
                        @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="container">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter EmailAddress" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="container">
                    @Html.LabelFor(model => model.ContactNo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ContactNo, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter ContactNo" } })
                        @Html.ValidationMessageFor(model => model.ContactNo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="container">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    </div>
                </div>
                <br />
                <div class="container">
                    <button type="button" class="btn btn-group-sm dropdown-toggle" data-bs-toggle="dropdown">
                        SignUp As
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="https://localhost:44315/UserLogin/SignUp">User</a></li>
                        <li><a class="dropdown-item" href="https://localhost:44315/PoliceSignUp/SignUp">Police</a></li>

                    </ul>
                </div>
                <br />
                <div class="buttons">

                    <button class="button1" onclick="document.location ='https://localhost:44315/Login/Index'">Create Account</button>
                    @*<input type="submit" value="Create Account" href=" class="btn btn-primary btn-lg active" role="button" aria-pressed="true" />*@
                    @*<a class="dropdown-item" href="https://localhost:44315/Login/Index">Already Have an Account?LogIn</a>*@
                    <div>
                        Already Have An Account?<a href="https://localhost:44315/Login/Index"><strong>LogIn</strong></a>
                    </div>
                </div>
            </center>
        </div>
    }

    @*<div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
</body>
</html>
